homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 43.4653258
  longitude: -80.5414864
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 329
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Toronto
  # Customization file
  customize: !include customize.yaml
  packages:
    alexs_alarm: !include alarm_alex.yaml
  auth_providers:
    - type: trusted_networks
      trusted_networks:
        - 10.102.40.0/24
        - 10.100.0.0/24
      trusted_users:
        10.102.40.0/24: a2743d687ca948cbad02592c7dafb87c
        10.100.0.0/24: 7bcee28a808d47fb9769b9ebeade8006
      allow_bypass_login: true
    - type: homeassistant
    - type: legacy_api_password
      api_password: !secret api_password
# Show links to resources in log and frontend
#introduction:

stream:

google_assistant:
  project_id: 'analytical-camp-193313'
  service_account: !include homeassist_service_account.json
  report_state: true
  exposed_domains:
    - media_player
    - cover
  entity_config:
    media_player.living_room_big_tv:
      expose: true
      name: 'Living TV'
      room: 'Living Room'
    light.living_room:
      expose: true
      name: 'Living Room Lights'
      room: 'Living Room'
    light.bedroom:
      expose: true
      name: 'Bedroom Lights'
      room: 'Bedroom'
    media_player.alex_tv:
      expose: true
      name: 'Bedroom TV'
      room: 'Bedroom'
    vacuum.roomba:
      expose: true
      name: 'Roomba'
      room: 'Living Room'
    light.office:
      expose: true
      name: 'Office Lights'
      room: 'Office'
    scene.night_time:
      expose: true
      name: 'Night Time'
      room: 'Living Room'
    scene.as_room_bedside_only:
      expose: true
      name: 'Reading Lights'
      room: 'Bedroom'
    group.all_automations:
      expose: false

wake_on_lan:
cover:


panel_iframe:
  nagios:
    title: 'Nagios'
    url: 'http://10.102.40.20:8086/nagios/cgi-bin/status.cgi?host=all'
    icon: 'mdi:bell-alert'
  shops:
    title: 'Shopping Lists'
    url: 'http://10.102.40.20:1323'
    icon: 'mdi:shopify'
  torrents:
    title: 'Torrents'
    url: 'http://10.102.40.20:8083'
    icon: 'mdi:cloud-download'
  torfiles:
    title: 'Torrents (Files)'
    url: 'http://10.102.40.20:8085'
    icon: 'mdi:download-network'

# Enables the frontend
frontend: !include frontend.yaml

lovelace:
  mode: yaml

# Enables configuration UI
config:
panel_custom: !include panel_custom.yaml

logger:
  default: info
recorder:
  purge_keep_days: 7
history:

camera:
  - platform: mjpeg
    name: "Window Camera"
    mjpeg_url: http://10.102.40.20:40421/?action=stream
    still_image_url: http://10.102.40.20:40421/?action=snapshot
  - platform: generic
    name: "Door Camera"
    still_image_url: http://172.17.0.1:8084/cgi-bin/currentpic.cgi
    username: root
    password: ismart12
    verify_ssl: false

http:
  # Secrets are defined in the file secrets.yaml
  # api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123

device_tracker:

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
#discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
#history:

# View all events in a logbook
#logbook:

# Enables a map showing the location of tracked devices
#map:

input_text:
  calendarevents:
    name: 'Calendar Events'
    initial: 'Nothing Much'
    max: 255

mysensors:
  gateways:
    - device: '/dev/ttyUSB-Arduino'
  version: 2.2
  optimistic: true

# Track the sun
sun:

zwave:
  usb_path: /dev/ttyUSB-ZStick-5G
  network_key: !secret zwave_network_key

# Weather prediction
sensor:
  - platform: yr
  - platform: darksky
    api_key: !secret darksky_key
    monitored_conditions:
      - wind_speed
      - wind_bearing
      - humidity
      - pressure
      - icon
      - temperature
      - summary
      - apparent_temperature
      - precip_probability
      - precip_intensity
  - platform: template
    sensors:
      last_door_open:
        friendly_name: "Front Door Last Open"
        value_template: "{{ states.binary_sensor.front_door_open.last_updated }}"
        device_class: timestamp


# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

# Cloud
#cloud:

mqtt:
  broker: 172.17.0.1
  port: 1883
  username: hass
  password: !secret mqtt_password
  protocol: 3.1
  client_id: hassforapart

binary_sensor:
  - platform: mqtt
    name: Floorplan
    state_topic: "dummy/floorplan/sensor"
  - platform: mqtt
    force_update: true
    name: "Front Door Open"
    state_topic: "sensors/door/frontdoor"

vacuum:
  - platform: mqtt
    name: "roomba"
    supported_features:
      - turn_on
      - turn_off
      - pause
      - stop
      - return_home
      - battery
      - status
      - clean_spot
      - send_command
    command_topic: "vacuum/command"
    battery_level_topic: "vacuum/state"
    battery_level_template: "{{ value_json.battery_level }}"
    charging_topic: "vacuum/state"
    charging_template: "{{ value_json.charging }}"
    cleaning_topic: "vacuum/state"
    cleaning_template: "{{ value_json.cleaning }}"
    docked_topic: "vacuum/state"
    docked_template: "{{ value_json.docked }}"
    send_command_topic: 'vacuum/send_command'

scene:
  - name: "AS Room Bedside Only"
    entities:
      light.dimmable_light_1_4:
        state: on
        brightness: 128
      light.dimmable_light_1_5:
        state: on
        brightness: 128
      light.tradfri1:
        state: off
      light.tradfri3:
        state: off
  - name: "AS Room Bright"
    entities:
      light.dimmable_light_1_4:
        state: on
        brightness: 200
      light.dimmable_light_1_5:
        state: on
        brightness: 200
      light.tradfri3:
        state: on
        brightness: 255
      light.tradfri1:
        state: on
        brightness: 255
  - name: "AS Room Off"
    entities:
      light.bedroom:
        state: off
  - name: Alexs Room Bulbone Slow
    entities:
      light.tradfri1:
        state: on
        brightness: 255
        transition: 1200
  - name: Alexs Room Bulbtwo Slow
    entities:
      light.tradfri3:
        state: on
        brightness: 255
        transition: 900
  - name: Alexs Room Bedside Slow
    entities:
      light.dimmable_light_1_4:
        state: on
        brightness: 200
        transition: 900
      light.dimmable_light_1_5:
        state: on
        brightness: 200
        transition: 900
group:

switch:
  - platform: mqtt
    name: "Alex TV OnOff"
    state_topic: "media_player/alex/tv/state"
    command_topic: "media_player/alex/tv"
  - platform: mqtt
    name: "Alex TV Mute"
    state_topic: "media_player/alex/tv/mute/state"
    command_topic: "media_player/alex/tv/mute"
  - platform: command_line
    scan_interval: 5
    switches:
      bigtv_onoff:
        friendly_name: "TV Power State"
        command_off: 'curl -X POST http://10.102.40.20:8089/turnOff'
        command_on: 'curl -X POST http://10.102.40.20:8089/turnOn'
        command_state: 'curl http://10.102.40.20:8089/status'
        value_template: '{{ value == "ON" }}'

shell_command:
  bigtv_hdmi1: 'curl -X POST http://10.102.40.20:8089/input?input=HDMI1'

media_player:
  - platform: yamaha
    name: "Living Room AVR"
    host: "10.102.40.172"
    zone_ignore:
      - "Zone 2"
    source_ignore:
      - "AUDIO1"
      - "AUDIO2"
      - "AUDIO3"
      - "AV1"
      - "AV2"
      - "AV3"
      - "AirPlay"
      - "Alexa"
      - "Amazon Music"
      - "Deezer"
      - "HDMI1"
      - "HDMI4"
      - "MusicCast Link"
      - "NET RADIO"
      - "Napster"
      - "Pandora"
      - "SERVER"
      - "SiriusXM"
      - "Spotify"
      - "TIDAL"
      - "USB"
    source_names:
      HDMI2: "Shield"
      HDMI3: "Switch"
  - platform: universal
    name: Alex TV
    commands:
      turn_on:
        service: switch.turn_on
        data:
          entity_id: switch.alex_tv_onoff
      turn_off:
        service: switch.turn_off
        data:
          entity_id: switch.alex_tv_onoff
      volume_up:
        service: mqtt.publish
        data:
          topic: 'media_player/alex/piocmd'
          qos: 0
          payload: 'VOLUP5'
      volume_down:
        service: mqtt.publish
        data:
          topic: 'media_player/alex/piocmd'
          qos: 0
          payload: 'VOLDW5'
      volume_mute:
        service: mqtt.publish
        data:
          topic: 'media_player/alex/tv/mute'
          qos: 0
          payload: 'ON'
      volume_set:
        service: mqtt.publish
        data_template:
          topic: 'media_player/alex/tv/volume'
          qos: 0
          payload: '{{ volume_level }}'
    attributes:
      state: switch.alex_tv_onoff
      is_volume_muted: switch.alex_tv_mute
  - platform: universal
    name: Living Room Big TV
    commands:
      turn_on:
        service: switch.turn_on
        data:
          entity_id: switch.bigtv_onoff
      turn_off:
        service: switch.turn_off
        data:
          entity_id: switch.bigtv_onoff
      volume_up:
        service: mqtt.publish
        data:
          topic: 'media_player/livingroom/piocmd'
          qos: 0
          payload: 'VOLUP5'
      volume_down:
        service: mqtt.publish
        data:
          topic: 'media_player/livingroom/piocmd'
          qos: 0
          payload: 'VOLDW5'
      volume_mute:
        service: mqtt.publish
        data:
          topic: 'media_player/livingroom/tv/mute'
          qos: 0
          payload: 'ON'
      volume_set:
        service: mqtt.publish
        data_template:
          topic: 'media_player/livingroom/tv/volume'
          qos: 0
          payload: '{{ volume_level }}'
    attributes:
      state: switch.bigtv_onoff

input_boolean:
  switch_shield:
    name: Shield
    initial: off
  switch_alex_switch:
    name: Switch
    initial: off

light:
  - platform: mqtt
    name: 'Holiday Lights'
    state_topic: 'lights/fairy/state'
    command_topic: 'lights/fairy/set'
    payload_on: 'ON'
    payload_off: 'OFF'

automation: !include automations.yaml
automation old:
  - alias: Alex Switch Input
    trigger:
      - platform: state
        entity_id: input_boolean.switch_alex_switch
        to: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.switch_alex_switch
      - service: mqtt.publish
        data:
          topic: 'media_player/alex/tv'
          qos: 0
          payload: 'IN1'
      - delay: '00:00:05'
      - service: mqtt.publish
        data:
          topic: 'media_player/alex/piocmd'
          qos: 0
          payload: 'VOL013'
  - alias: Alex Shield Input
    trigger:
      - platform: state
        entity_id: input_boolean.switch_shield
        to: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.switch_shield
      - service: mqtt.publish
        data:
          topic: 'media_player/alex/tv'
          qos: 0
          payload: 'IN3'
      - delay: '00:00:05'
      - service: mqtt.publish
        data:
          topic: 'media_player/alex/piocmd'
          qos: 0
          payload: 'VOL040'

script: !include scripts.yaml
